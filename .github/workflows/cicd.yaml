name: python-app-test-cicd

on:
  push:
    paths:
      - src/**
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:

      - name: Shorten commit id
        shell: bash
        run: |
          echo "COMMIT_ID=${GITHUB_SHA::6}" >> "$GITHUB_ENV"
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: indry/python-app-test:${{ env.COMMIT_ID }} , indry/python-app-test:prod-latest
    outputs:
      commit_id: ${{ env.COMMIT_ID }}

  cd:
    needs: ci
    runs-on: self-hosted
    steps:

      - uses: actions/checkout@v3

      - name: Modify values file
        shell: bash
        run: |
          echo ${{needs.ci.outputs.commit_id}}
          pip install yq
          yq -Yi '.image.tag = "${{needs.ci.outputs.commit_id}}"' charts/python-app-test/values-prod.yaml

      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "Updates values.yaml with commit ${{needs.ci.outputs.commit_id}}"

      - name: Install argocd
        shell: bash
        run: |
          curl -ksSL -o argocd https://argocd-server.argocd/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv ./argocd /usr/local/bin/argocd
          argocd login argocd-server.argocd \
            --insecure  \
            --grpc-web \
            --username admin \
            --password  ${{ secrets.ARGOCD_PASSWORD }}

      - name: Ensure argocd repo app is added
        shell: bash
        run: |
          # Connects the argocd repo to the argocd server
          repo="https://github.com/hoxhaj-org/python-app-test.git"
          argocd repo list | grep -q $repo || argocd repo add $repo

          argocd app get python-app-test || argocd app create python-app-test \
            --repo $repo \
            --path charts/python-app-test \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace prod \
            --values values-prod.yaml \
            --revision master \
            --sync-policy manual \
            --sync-option CreateNamespace=true

      - name: Argocd app sync
        shell: bash
        run: |
          argocd app sync python-app-test
          argocd app wait python-app-test --health --timeout 180
